@using pax.blazor.survey.Models
@using pax.blazor.survey.Data
@using pax.blazor.survey.Services
@inject DbService _db

@for (int i = 0; i < Question.Options.Count; i++)
{
    int j = i;
    Option qoption = Question.Options.First(f => f.Pos == j + 1);
    Answer ranswer = Response.Answers.First(f => f.Pos == j + 1);
    <div class="col">
        <label>
            <InputCheckbox @bind-Value="ranswer.Selected" />
            @qoption.OptionValue
        </label>
    </div>
}

@code {
    [Parameter]
    public Question Question { get; set; }

    [CascadingParameter(Name = "Context1")]
    protected EditContext editContext { get; set; }

    [CascadingParameter(Name = "Survey1")]
    protected Survey Survey { get; set; }

    [CascadingParameter(Name = "User1")]
    protected User User { get; set; }

    Response Response;

    protected override void OnParametersSet()
    {
        Response = _db.GetResponse(Survey, Question, User);

        // fail safe for preview - TODO
        if (Response.Answers == null)
            Response.Answers = new List<Answer>();
        while (Response.Answers.Count < Question.Options.Count)
            Response.Answers.Add(new Answer() { Pos = Response.Answers.Count + 1, Response = Response });

        base.OnParametersSet();
    }

}